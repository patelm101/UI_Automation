package tests;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
package io.github.bonigarcia.wdm.test.chromium;

import static java.lang.invoke.MethodHandles.lookup;
import static org.assertj.core.api.Assumptions.assumeThat;
import static org.openqa.selenium.net.PortProber.findFreePort;
import static org.slf4j.LoggerFactory.getLogger;

import java.nio.file.Path;
import java.time.Duration;
import java.util.Optional;


import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.slf4j.Logger;

import io.github.bonigarcia.wdm.WebDriverManager;
public class ChromeTest {
	final Logger log = getLogger(lookup().lookupClass());

    WebDriver driver;

    static Optional<Path> browserPath;

    @BeforeClass
    static void setupClass() {
        browserPath = WebDriverManager.chromiumdriver().getBrowserPath();
        assumeThat(browserPath).isPresent();

        WebDriverManager.chromiumdriver().setup();
    }

    @BeforeClass
    void setupTest() {
        ChromeOptions options = new ChromeOptions();
        options.setBinary(browserPath.get().toFile());
        options.addArguments("--no-sandbox");
        options.addArguments("--disable-gpu");
        options.addArguments("--disable-dev-shm-usage");
        options.addArguments("--remote-debugging-port=" + findFreePort());
        driver = new ChromeDriver(options);
    }

    @AfterClass
    void teardown() {
        driver.quit();
    }
	@Test
    void test() {
        String sutUrl = "https://bonigarcia.dev/selenium-webdriver-java/";
        driver.get(sutUrl);
        String title = driver.getTitle();
        log.debug("The title of {} is {}", sutUrl, title);

    }
	
}
